// consumes the pointer to the start of the string
// return the number of bytes written
fn print {
    let address {
        0 while { dup address + load_byte dup 0 > } {
                putc
                1 +
            }   
        drop address swap
        1 + // account for null termination
    }
}

// takes two elements to start the sequence
fn fibonacci {
    while { dup 100 < } {
        let b a {
            b
            a b +
            a putu
        }
        ", " print free
    }
    drop drop
}

fn main {
    1 1 fibonacci
    10 putc 
}

